const http = require('http');
const https = require('https');

module.exports = function(urls) {
  return new Promise((resolve, reject) => {
    let failResults = {};
    let successResults = {};
      // ensure each URL is only called once
    let uniqueUrls = new Set(urls);

    function checkForCompletion() {
      if (uniqueUrls.size === 0) {
        if (Object.keys(failResults).length === 0) {
          resolve(successResults);
        } else {
          // partial success = failure, but any individual successful URL calls expose their results
          reject({succeeded:successResults, failed:failResults});
        }
      }
    }

    function handleFailure(url, err) {
      failResults[url] = err;
      uniqueUrls.delete(url);
      checkForCompletion();
    }

    function handleSuccess (url, data) {
      try {
        successResults[url] = JSON.parse(data);
        uniqueUrls.delete(url);
        checkForCompletion();
      } catch (err) {
        handleFailure(url, err);
      }
    };

    uniqueUrls.forEach(url => {
      let data = '';
      let protocol;
      if (url.match('https://.*')) {
        protocol = https;
      } else if (url.match('http://.*')) {
        protocol = http;
      } else {
        handleFailure(url, new Error('Only https or http protocol can be processed'));
        return;
      }
      protocol.get(url, response => {
        response.on('data', d => {
          data += d;
        });
        response.on('end', () => {
          handleSuccess(url, data);
        });
      }).on("error", err => {
        handleFailure(url, err);
      });
    });
  });
};
